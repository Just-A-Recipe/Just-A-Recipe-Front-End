Landnig Page
  Header
    Title
    Search {searchQuery gets sent to fetchRecipes}
    Account
  Random Cards with good pics {gets response from "randomly generated IDs" upon page load}
  Footer
    About Us Link
    Alchemy Link

Search Result Page
  Header
    Title
    Search {searchQuery gets sent to fetchReipes}
    Account
  Results of Search {displays results of searchQuery. We store it by ID}
  Footer
    About Us Link
    Alchemy Link

Recipe Detail Page
  Header
    Title
    Search {searchQuery gets sent to fetchRecipes}
    Account
  Recipe Name (gotten from FetchRecipeById)
  Ingredients (gotten from FetchRecipeById)
  Instructions (gotten from FetchRecipeById)
  Footer
    About Us Link
    Alchemy Link


Landing Page
  hardcoded random id fetch and display
Search Result Page
  displays "ID" based on seachQuery
Recipe Detail Page
  result from the ID seach (fetch)


***API Fetches we have***
fetchRecipes
  takes our searchQuery from the search bar and returns a set number of responses
  .get(`https://api.spoonacular.com/recipes/search?query=${searchQuery}&number=${resPP}&apiKey=${process.env.API_KEY}`)
{
"results": [
{
"id": 878183,
"title": "Jack Danielâ€™s Grilled Steak",
"image": "jack-daniels-grilled-steak-878183.jpg"
}
],
"baseUri": "https://spoonacular.com/recipeImages/",
"offset": 0,
"number": 1,
"totalResults": 860,
"processingTimeMs": 479,
"expires": 1590605943971
}
!!!!!!!!!!!!!!!!!!!!!!!!!in order to get the image we're going to have to take the baseUri+image!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

fetchRecipe
  takes the id and returns one recipe
  fetch(`http://localhost:7890/api/v1/recipes/${id}`)
  
fetchSimilarRecipes
  takes an ID and returns similiar recipes
  .get(`https://api.spoonacular.com/recipes/${id}/similar?${process.env.API_KEY}`)


***API Fetches we need***
fetchRandomRecipes
  Looks for random recipes with good pictures
  I think we're going to have to look ourselfs for recipes with good pics, get those IDs. Then hard code a couple different recipes and randomize our result for the page.

fetchRecipeDetails
  takes an id aand

Containers:
RecipeViewer - a look at all the recipes - takes in searchQuery and displays title and image (has ID)
RecipeDetailViewer - a look at specific recipes - takes and ID and displays title, image, ingredients, measurements

